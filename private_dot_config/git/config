[alias]
	stash-all = stash save --include-untracked
	# We wanna grab those pesky un-added files!
	# https://git-scm.com/docs/git-stash

	glog = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
	# No need for a GUI - a nice, colorful, graphical representation
	# https://git-scm.com/docs/git-log
	# via https://medium.com/@payload.dd/thanks-for-the-git-st-i-will-use-this-4da5839a21a4

	d = difftool

	# https://stackoverflow.com/a/21857717
	branch-cleanup = "!git branch --merged | grep  -v '\\*\\|master\\|develop' | xargs -n 1 git branch -d"

[commit]
	gpgSign = true

[core]
	autocrlf = input
	quotePath = false

[diff]
	tool = ediff

[diff "json"]
	textconv = "cat \"$1\" | json_pp --json_opt=canonical,pretty,relaxed"

[diff "image"]
	command = 'git-imgdiff'

[difftool "ediff"]
	cmd = ~/bin/ediff.sh $LOCAL $REMOTE $MERGED

[filter "kicad_project"]
	clean = sed -E 's/^update=.*$/update=Date/'
	smudge = cat

[filter "kicad_sch"]
	clean = "sed -E 's/#(PWR|FLG)[0-9]+/#\\1?/'"
	smudge = cat

[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process

[gpg]
	program = gpg2

[init]
	defaultBranch = main

[merge]
	conflictstyle = diff3
	# Standard diff is two sets of final changes. This introduces the original text before each side's changes.
	# https://git-scm.com/docs/git-config#git-config-mergeconflictStyle

	tool = ediff

[mergetool "ediff"]
	cmd = ~/bin/ediff.sh $LOCAL $REMOTE $MERGED $BASE
	trustExitCode = true

[mergetool "vim_mergetool"]
	cmd = vim -f -c "MergetoolStart" "$MERGED" "$BASE" "$LOCAL" "$REMOTE"
	trustExitCode = true

[push]
	default = simple
	# "push the current branch back to the branch whose changes are usually integrated into the current branch"
	# "refuse to push if the upstream branchâ€™s name is different from the local one"
	# https://git-scm.com/docs/git-config#git-config-pushdefault

	followTags = true
	autoSetupRemote = true
	# Because I get sick of telling git to do it manually
	# https://git-scm.com/docs/git-config#git-config-pushfollowTags

[status]
	showUntrackedFiles = all
	# Sometimes a newly-added folder, since it's only one line in git status, can slip under the radar.
	# https://git-scm.com/docs/git-config#git-config-statusshowUntrackedFiles

[pull]
	rebase = true

[recieve]
	fsckObjects = false

[submodule]
	recurse = true

[transfer]
	fsckObjects = false

[user]
	name = Anton Tetov
	email = anton@tetov.se
	signingkey = 2B4D0035AFF0F7DACE5B29D7337DDB574A8834DB
